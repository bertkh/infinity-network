{"version":3,"file":"static/js/839.3bbf630e.chunk.js","mappings":"wKACA,EAA0B,yBAA1B,EAAkE,8BAAlE,EAA0I,wBAA1I,EAA6K,0BCA7K,EAAuB,yBAAvB,EAAyG,2BAAzG,EAA6I,2B,mBCe7I,EAZmB,SAACA,GAChB,IAAIC,EAAO,YAAcD,EAAME,GAE/B,OAAO,iBAAKC,UAAWC,EAAW,IAAMA,EAAS,WAC7C,SAAC,KAAO,CAACC,GAAIJ,EAAK,SAAED,EAAMM,QAC1B,iBAAKH,UAAWC,EAAO,WACnB,gBAAKG,IAAI,oFAAoFC,IAAI,KAChGR,EAAMS,aAGnB,ECPA,EAJgB,SAACT,GACb,OAAO,gBAAKG,UAAWC,EAAS,SAAEJ,EAAMS,SAC5C,E,iDCAMC,GAAcC,EAAAA,EAAAA,GAAiB,IAiBrC,GAAeC,EAAAA,EAAAA,GAAU,CAAEC,KAAM,wBAAjC,EAfuB,SAACb,GACpB,OACI,kBAAMc,SAAUd,EAAMe,aAAa,WAC/B,0BACI,SAACC,EAAA,EAAK,CAACC,UAAYC,EAAAA,GACZC,SAAU,CAACC,EAAAA,EAAUV,GACrBJ,KAAK,iBAAiBe,YAAY,0BAE7C,0BACI,0BAAK,4BAAQ,eAI7B,ICiBA,EA9BgB,SAACrB,GAEb,IAAIsB,EAAQtB,EAAMuB,YAEdC,EAAkBF,EAAMG,QAAQC,KAAI,SAAAC,GAAC,OAAI,SAAC,EAAU,CAACrB,KAAMqB,EAAErB,KAAiBJ,GAAIyB,EAAEzB,IAAZyB,EAAEzB,GAAe,IACzF0B,EAAmBN,EAAMO,SAASH,KAAI,SAAAI,GAAC,OAAI,SAAC,EAAO,CAACrB,QAASqB,EAAErB,SAAcqB,EAAE5B,GAAK,IACnEoB,EAAMS,eAO3B,OAAK/B,EAAMgC,QAGP,iBAAK7B,UAAWC,EAAU,WACtB,gBAAKD,UAAWC,EAAe,SACzBoB,KAEN,iBAAKrB,UAAWC,EAAW,WACvB,yBAAOwB,KACP,SAAC,EAAc,CAACd,SAbR,SAACmB,GACjBjC,EAAMkC,YAAYD,EAAOF,eAC7B,WAE0B,SAAC,KAAQ,CAAC1B,GAAG,UAa3C,E,oBCXA,GAAe8B,E,QAAAA,KACXC,EAAAA,EAAAA,KAfkB,SAACd,GACnB,MAAO,CACHC,YAAaD,EAAMC,YAE3B,IACyB,SAACc,GACtB,MAAO,CAEHH,YAAa,SAACH,GACVM,GAASC,EAAAA,EAAAA,GAAmBP,GAChC,EAER,IAIIQ,EAAAA,EAFJ,CAGEC,E","sources":["webpack://my-app/./src/components/Dialogs/Dialogs.module.css?1b2e","webpack://my-app/./src/components/Dialogs/DialogItem/DialogItem.module.css?beb9","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/AddMessageForm/AddMessageForm.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__Rgebk\",\"dialogsItems\":\"Dialogs_dialogsItems__dHeF2\",\"active\":\"Dialogs_active__MkdrM\",\"dialog\":\"Dialogs_dialog__mBcdr\",\"messages\":\"Dialogs_messages__WIn+D\",\"message\":\"Dialogs_message__uzYmZ\",\"header\":\"Dialogs_header__-2Ei1\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"DialogItem_item__g3T0Y\",\"dialogsItems\":\"DialogItem_dialogsItems__R7gg6\",\"active\":\"DialogItem_active__9eYYw\",\"dialog\":\"DialogItem_dialog__aDt+W\",\"messages\":\"DialogItem_messages__Ou6s2\",\"message\":\"DialogItem_message__JHlKj\",\"header\":\"DialogItem_header__ZfMd6\"};","import React from 'react';\r\nimport s from './DialogItem.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n    let path = \"/dialogs/\" + props.id;\r\n\r\n    return <div className={s.dialog + ' ' + s.active}>\r\n        <NavLink to={path}>{props.name}</NavLink>\r\n        <div className={s.item}>\r\n            <img src=\"https://olympus.crumina.net/wp-content/uploads/avatars/1/5c24a6689aa5b-bpfull.jpg\" alt=\"\"/>\r\n            {props.message}\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default DialogItem;\r\n","import React from 'react';\r\nimport s from '../Dialogs.module.css';\r\n\r\nconst Message = (props) => {\r\n    return <div className={s.dialog}>{props.message}</div>\r\n}\r\n\r\nexport default Message;","import {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\nimport React from \"react\";\r\n\r\nconst maxLength50 = maxLengthCreator(50);\r\n\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={ Textarea }\r\n                       validate={[required, maxLength50]}\r\n                       name='newMessageBody' placeholder='Enter your message' />\r\n            </div>\r\n            <div>\r\n                <div><button>Send</button></div>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default reduxForm({ form: 'dialogAddMessageForm' })(AddMessageForm);\r\n","import React from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport {Navigate} from \"react-router-dom\";\r\nimport AddMessageForm from \"./AddMessageForm/AddMessageForm\";\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let state = props.dialogsPage;\r\n\r\n    let dialogsElements = state.dialogs.map(d => <DialogItem name={d.name} key={d.id} id={d.id}/>);\r\n    let messagesElements = state.messages.map(m => <Message message={m.message} key={m.id}/>);\r\n    let newMessageBody = state.newMessageBody;\r\n\r\n\r\n    let addNewMessage = (values) => {\r\n        props.sendMessage(values.newMessageBody);\r\n    }\r\n\r\n    if (!props.isAuth) return <Navigate to='/login'/>;\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                { dialogsElements }\r\n            </div>\r\n            <div className={s.messages}>\r\n                <div>{ messagesElements }</div>\r\n                <AddMessageForm onSubmit={addNewMessage} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default Dialogs;","import React from 'react';\r\nimport {sendMessageCreator} from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n\r\n        sendMessage: (newMessageBody) => {\r\n            dispatch(sendMessageCreator(newMessageBody));\r\n        }\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs);"],"names":["props","path","id","className","s","to","name","src","alt","message","maxLength50","maxLengthCreator","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","required","placeholder","state","dialogsPage","dialogsElements","dialogs","map","d","messagesElements","messages","m","newMessageBody","isAuth","values","sendMessage","compose","connect","dispatch","sendMessageCreator","withAuthRedirect","Dialogs"],"sourceRoot":""}