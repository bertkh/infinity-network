{"version":3,"file":"static/js/468.b59a3931.chunk.js","mappings":"0KACA,G,QAA0B,0BAA1B,EAAkE,8BAAlE,EAAyG,wBAAzG,EAA4I,0BCA5I,GAAgB,KAAO,yBAAyB,SAAW,6BAA6B,OAAS,4B,mBCqBjG,EAXuC,SAACA,GACpC,IAAIC,EAAO,YAAcD,EAAME,GAC/B,OAAO,iBAAKC,UAAWC,EAAAA,OAAW,IAAMA,EAAAA,OAAS,WAC7C,SAAC,KAAO,CAACC,GAAIJ,EAAK,SAAED,EAAMM,QAC1B,iBAAKH,UAAWC,EAAAA,KAAO,WACnB,gBAAKG,IAAI,oFAAoFC,IAAI,KAChGR,EAAMS,aAGnB,ECTA,EAJoC,SAACT,GACjC,OAAO,gBAAKG,UAAWC,EAAS,SAAEJ,EAAMS,SAC5C,E,6BCHMC,GAAcC,EAAAA,EAAAA,GAAiB,IAkBrC,GAAeC,EAAAA,EAAAA,GAAoC,CAAEC,KAAM,wBAA3D,EAbqG,SAACb,GAClG,OACI,kBAAMc,SAAUd,EAAMe,aAAa,WAC/B,0BACKC,EAAAA,EAAAA,IAA0C,qBAAsB,iBAAkB,CAACC,EAAAA,EAAUP,GAAcQ,EAAAA,OAEhH,0BACI,0BAAK,4BAAQ,eAI7B,ICsBA,EA1BqC,SAAClB,GAElC,IAAImB,EAAQnB,EAAMoB,YAEdC,EAAkBF,EAAMG,QAAQC,KAAI,SAAAC,GAAC,OAAI,SAAC,EAAU,CAAClB,KAAMkB,EAAElB,KAAiBJ,GAAIsB,EAAEtB,GAAIO,QAASe,EAAEf,SAA3Be,EAAEtB,GAAmC,IAC7GuB,EAAmBN,EAAMO,SAASH,KAAI,SAAAI,GAAC,OAAI,SAAC,EAAO,CAAClB,QAASkB,EAAElB,SAAckB,EAAEzB,GAAK,IAMxF,OACI,iBAAKC,UAAWC,EAAU,WACtB,gBAAKD,UAAWC,EAAe,SACzBiB,KAEN,iBAAKlB,UAAWC,EAAW,WACvB,yBAAOqB,KACP,SAAC,EAAc,CAACX,SAXR,SAACc,GACjB5B,EAAM6B,YAAYD,EAAOE,eAC7B,SAaJ,E,oBC1BA,GAAeC,E,QAAAA,KACXC,EAAAA,EAAAA,KANkB,SAACb,GACnB,MAAO,CACHC,YAAaD,EAAMC,YAE3B,IAE4B,UAAKa,EAAAA,IAC7BC,EAAAA,EAFJ,CAGEC,E","sources":["webpack://my-app/./src/components/Dialogs/Dialogs.module.css?1b2e","webpack://my-app/./src/components/Dialogs/DialogItem/DialogItem.module.css?beb9","components/Dialogs/DialogItem/DialogItem.tsx","components/Dialogs/Message/Message.tsx","components/Dialogs/AddMessageForm/AddMessageForm.tsx","components/Dialogs/Dialogs.tsx","components/Dialogs/DialogsContainer.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__Rgebk\",\"dialogsItems\":\"Dialogs_dialogsItems__dHeF2\",\"dialog\":\"Dialogs_dialog__mBcdr\",\"messages\":\"Dialogs_messages__WIn+D\",\"header\":\"Dialogs_header__-2Ei1\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"DialogItem_item__g3T0Y\",\"messages\":\"DialogItem_messages__Ou6s2\",\"dialog\":\"DialogItem_dialog__aDt+W\"};","import React from 'react';\r\nimport s from './DialogItem.module.css';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\ntype PropsType = {\r\n    id: number\r\n    name: string\r\n    message: string\r\n}\r\n\r\n\r\nconst DialogItem:React.FC<PropsType> = (props) => {\r\n    let path = '/dialogs/' + props.id;\r\n    return <div className={s.dialog + ' ' + s.active}>\r\n        <NavLink to={path}>{props.name}</NavLink>\r\n        <div className={s.item}>\r\n            <img src='https://olympus.crumina.net/wp-content/uploads/avatars/1/5c24a6689aa5b-bpfull.jpg' alt=''/>\r\n            {props.message}\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default DialogItem\r\n","import React from 'react';\r\nimport s from '../Dialogs.module.css';\r\n\r\ntype PropsType = {\r\n    message: string\r\n}\r\n\r\nconst Message:React.FC<PropsType> = (props) => {\r\n    return <div className={s.dialog}>{props.message}</div>\r\n}\r\n\r\nexport default Message","import {maxLengthCreator, required} from '../../../utils/validators/validators';\r\nimport {InjectedFormProps, reduxForm} from 'redux-form';\r\nimport {createField, Textarea} from '../../common/FormsControls/FormsControls';\r\nimport React from 'react';\r\nimport {NewMessageFormValuesType} from \"../Dialogs\";\r\n\r\nconst maxLength50 = maxLengthCreator(50);\r\n\r\ntype NewMessageFormValuesKeysType = Extract<keyof NewMessageFormValuesType, string>\r\ntype PropsType = {}\r\n\r\nconst AddMessageForm: React.FC<InjectedFormProps<NewMessageFormValuesType, PropsType> & PropsType> = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                {createField<NewMessageFormValuesKeysType>('Enter your message', 'newMessageBody', [required, maxLength50], Textarea)}\r\n            </div>\r\n            <div>\r\n                <div><button>Send</button></div>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default reduxForm<NewMessageFormValuesType>({ form: 'dialogAddMessageForm' })(AddMessageForm);\r\n","import React from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport DialogItem from './DialogItem/DialogItem';\r\nimport Message from './Message/Message';\r\nimport AddMessageForm from './AddMessageForm/AddMessageForm';\r\nimport {InitialStateType} from '../../redux/dialogs-reducer';\r\n\r\ntype PropsType = {\r\n    dialogsPage: InitialStateType\r\n    sendMessage: (messageText: string) => void\r\n}\r\n\r\nexport type NewMessageFormValuesType = {\r\n    newMessageBody: string\r\n}\r\n\r\n\r\n\r\nconst Dialogs: React.FC<PropsType> = (props) => {\r\n\r\n    let state = props.dialogsPage;\r\n\r\n    let dialogsElements = state.dialogs.map(d => <DialogItem name={d.name} key={d.id} id={d.id} message={d.message}/>);\r\n    let messagesElements = state.messages.map(m => <Message message={m.message} key={m.id}/>);\r\n\r\n    let addNewMessage = (values: NewMessageFormValuesType) => {\r\n        props.sendMessage(values.newMessageBody);\r\n    }\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                { dialogsElements}\r\n            </div>\r\n            <div className={s.messages}>\r\n                <div>{ messagesElements }</div>\r\n                <AddMessageForm onSubmit={addNewMessage} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default Dialogs;","import React from 'react';\r\nimport {actions} from '../../redux/dialogs-reducer';\r\nimport Dialogs from './Dialogs';\r\nimport {connect} from 'react-redux';\r\nimport {withAuthRedirect} from '../hoc/withAuthRedirect';\r\nimport {compose} from 'redux';\r\nimport {AppStateType} from '../../redux/redux-store';\r\n\r\n\r\nlet mapStateToProps = (state: AppStateType) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n    }\r\n}\r\nexport default compose<React.ComponentType>(\r\n    connect(mapStateToProps, {...actions}),\r\n    withAuthRedirect\r\n)(Dialogs)"],"names":["props","path","id","className","s","to","name","src","alt","message","maxLength50","maxLengthCreator","reduxForm","form","onSubmit","handleSubmit","createField","required","Textarea","state","dialogsPage","dialogsElements","dialogs","map","d","messagesElements","messages","m","values","sendMessage","newMessageBody","compose","connect","actions","withAuthRedirect","Dialogs"],"sourceRoot":""}